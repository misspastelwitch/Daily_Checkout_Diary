Ik kan uitleggen wat NodeJS is en waarvoor het gebruikt wordt
2
geen code

Ik weet wat het doel van package.json is en heb hier aanpassingen in gemaakt
3
"description": "DDA Opdracht - vacatures pagina",

Ik heb met npm packages geïnstalleerd en gebruikt in het bestand server.js
3
import express from 'express'

Ik kan met commando’s in de terminal een NodeJS project stoppen en starten
3
npm start

Ik weet waarom ik mijn NodeJS project regelmatig moet herstarten en kan dit uitleggen
3
geen code

Ik heb een strategie voor debuggen in NodeJS
1
geen code

Ik kan uitleggen wat Express.js doet en waarom het nodig is om met NodeJS een website te bouwen
1
geen code

Ik weet wat routes zijn en kan zelf een nieuwe route aanmaken
3
app.get('/', async function (request, response) {

Ik weet wat request en response argumenten zijn in een functie voor het laden van data
3
geen code

Ik heb gebruik gemaakt van een request parameter om specifieke data te laden
2
body: new URLSearchParams(new FormData(form))

Ik kan uitleggen wat Liquid doet en waarom het nodig is om met Express.js een website te maken
2
geen code

Ik weet hoe ik data naar Liquid verstuur om dit te gebruiken bij het renderen van een pagina
3
class="title">{{vacature.title}

Ik weet hoe ik Liquid filters toe kan passen en waar ik kan vinden hoe die werken
1
geen code

Ik heb een nieuwe route gemaakt en nieuwe data meegegeven aan een Liquid view
3
{% for input in soliciteer %}

{{ input }}


{% endfor %}
Ik weet waar een foreach loop voor gebruikt wordt en pas het toe in een Liquid view om HTML te renderen
2
geen code

Ik kan in Liquid een controle maken waarmee een image niet getoond wordt als deze niet in de database is ingevuld
1
geen code

Ik heb een strategie voor debuggen in Liquid
0
geen code

Ik kan data fetchen uit een REST API
3
const vacaturesResponse = await fetch('https://fdnd-agency.directus.app/items/dda_agencies_vacancies')

Ik snap het verschil tussen HTTP requests van de methodes GET en POST
3
geen code

Ik kan data uit een REST API filteren of sorteren
2
geen code

Ik snap wat het async keyword doet in JavaScript code
3
geen code

Ik weet wat het doel is van een try/catch block en kan het gebruiken bij het parsen van JSON
1
geen code

Ik begrijp het verschil tussen client-side JavaScript en server-side JavaScript en wanneer ik welke het handigst in kan zetten
2
geen code

Ik kan formulier data die is ge-POST opslaan in een variabele op de server en gebruiken bij het renderen van een pagina
2
method:'POST',
headers: {
'Content-Type':'application/json;charset=utf-8',
console.log(apiResponse);

Ik kan formulier data die is ge-POST door middel van een POST of PATCH HTTP request opslaan in de REST API
3

app.post('/', async function (request, response) {
